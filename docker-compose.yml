version: "3.4"

services:
  sql-server-db:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: sql-server-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Ayman123@
    ports:
      - "1444:1433"
    volumes:
      - sql-data:/var/opt/mssql
    networks:
      - sampleproject-network

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Ayman123@
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sampleproject-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres-db
    ports:
      - "9090:80"
    networks:
      - sampleproject-network

  core.seq:
    image: datalust/seq:latest
    container_name: core-seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
    networks:
      - sampleproject-network
        
  core.elastic.search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: core.elastic.search
    environment:
      - node.name=core.elastic.search
      - cluster.name=core.elastic.search.cluster
      - cluster.initial_master_nodes=core.elastic.search
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-search-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
     - sampleproject-network
  
  core.kibana:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: core.kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://core.elastic.search:9200
      ELASTICSEARCH_HOSTS: http://core.elastic.search:9200
    depends_on:
      - core.elastic.search
    networks:
      - sampleproject-network
  
  core.presentation.api:
    image: ${DOCKER_REGISTRY-}corepresentationapi
    build:
      context: .
      dockerfile: src/Core.Presentation.Api/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - sql-server-db
      - postgres-db
      - core.seq
      - core.elastic.search
    networks:
      - sampleproject-network

volumes:
  postgres-data:
    driver: local
  sql-data:
    driver: local
  elastic-search-data:
    driver: local

networks:
  sampleproject-network:
    driver: bridge
